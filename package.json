{
  "name": "screen-play-wright",
  "version": "1.0.0",
  "description": "UI test automation framework built with Playwright + screenplay design pattern",
  "repository": {
    "type": "git",
    "url": ""
  },
  "engines": {
    "npm": ">=9"
  },
  "scripts": {
    "audit": "npm audit --registry https://registry.npmjs.org",
    "audit:fix": "npm audit fix --registry https://registry.npmjs.org",
    "audit:high": "npm audit --registry https://registry.npmjs.org --audit-level=high",
    "audit:critical": "npm audit --registry https://registry.npmjs.org --audit-level=critical",
    "check:git-lfs": "node_modules/.bin/ts-node ./src/utils/check-git-lfs.ts",
    "check:test-only": "node_modules/.bin/ts-node ./src/utils/check-test-only.ts",
    "clean-install": "rm -r node_modules/; rm package-lock.json; npm cache clean --force; npm i",
    "docker:build": "node_modules/.bin/cross-env DOCKER_BUILDKIT=1 docker build --target image-local -t screen-play-wright .; docker image prune -f",
    "eslint": "node_modules/.bin/eslint ./",
    "eslint:fix": "node_modules/.bin/eslint --fix ./",
    "lint": "npm run eslint; npm run tslint; npm run mdlint",
    "lint:fix": "npm run eslint:fix; npm run mdlint:fix",
    "list:interactions": "node_modules/.bin/ts-node ./src/utils/list-steps.ts interactions",
    "list:questions": "node_modules/.bin/ts-node ./src/utils/list-steps.ts questions",
    "mdlint": "node_modules/.bin/markdownlint-cli2 '**/*.md' '#node_modules' '#.github' '#playwright-report'",
    "mdlint:fix": "node_modules/.bin/markdownlint-cli2-fix '**/*.md' '#node_modules' '#.github' '#playwright-report'",
    "postinstall": "npx playwright install && node_modules/.bin/ts-node ./post-install.ts",
    "pretest": "node_modules/.bin/ts-node ./src/core/environment-setup.ts",
    "pretest:docker": "node_modules/.bin/ts-node ./src/core/environment-setup.ts",
    "test": "node_modules/.bin/cross-conf-env node_modules/.bin/cross-env node_modules/.bin/playwright test -c src/config/playwright.config.ts",
    "test:docker": "docker run -t -v $PWD:/screen-play-wright --rm --ipc=host -e IS_DOCKER=true screen-play-wright node_modules/.bin/playwright test -c src/config/playwright.config.ts",
    "report": "node_modules/.bin/ts-node ./src/utils/report-runner.ts",
    "tslint": "node_modules/.bin/tsc --noemit"
  },
  "pre-commit": [
    "eslint",
    "tslint",
    "mdlint",
    "check:git-lfs",
    "check:test-only",
    "audit:critical"
  ],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@cemalgnlts/mailjs": "^3.1.1",
    "@playwright/test": "1.55.x",
    "colors": "^1.4.0",
    "cross-conf-env": "^1.3.0",
    "cross-env": "^7.0.3",
    "fingerprint-generator": "^2.1.70",
    "fingerprint-injector": "^2.1.70",
    "glob": "^8.1.0",
    "inquirer": "^8.2.7",
    "proper-lockfile": "^4.1.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0"
  },
  "devDependencies": {
    "@types/inquirer": "^9.0.9",
    "@types/proper-lockfile": "^4.1.4",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "eslint": "^8.57.1",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-prettier": "^8.10.2",
    "eslint-import-resolver-typescript": "^3.10.1",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-import-helpers": "^1.3.1",
    "eslint-plugin-prettier": "^4.2.5",
    "markdownlint-cli2": "^0.18.1",
    "pre-commit": "^1.2.2",
    "prettier": "^2.8.8",
    "typescript": "^4.9.5"
  }
}